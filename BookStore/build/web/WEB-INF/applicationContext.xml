<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd" >

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/dataSource.properties" />

<bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    p:driverClassName="${dataSource.driverClassName}"
    p:url="${dataSource.url}"
    p:username="${dataSource.username}"
    p:password="${dataSource.password}" />

    <aop:aspectj-autoproxy/>
    <context:component-scan base-package="WebApp.*"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- 缓存配置 -->
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <!-- Hibernate 二级缓存提供类 -->
                <prop key="hibernate.cache.region.factory_class">
                    com.googlecode.hibernate.memcached.MemcachedRegionFactory
                </prop>
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.memcached.servers">localhost:11211</prop>
                <!-- 二级缓存前缀名称 -->
                <prop key="hibernate.cache.region_prefix">quality.cache.ehcache</prop>
                <prop key="hibernate.memcached.operationTimeout">5000</prop>
                <prop key="hibernate.memcached.cacheTimeSeconds">30</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>WebApp/Entity/User/User.hbm.xml</value>
                <value>WebApp/Entity/Book/Book.hbm.xml</value>
                <value>WebApp/Entity/Category/Category.hbm.xml</value>
                <value>WebApp/Entity/Manager/Manager.hbm.xml</value>
                <value>WebApp/Entity/Salestatics/Salestatics.hbm.xml</value>
            </list>
        </property>
    </bean>
    
    <!-- Entity -->
    
    <bean id="User" class="WebApp.Entity.User.User"/>
    <bean id="Book" class="WebApp.Entity.Book.Book"/>
    <bean id="Manager" class="WebApp.Entity.Manager.Manager"/>
    <bean id="Salestatics" class="WebApp.Entity.Salestatics.Salestatics"/>
    <bean id="Category" class="WebApp.Entity.Category.Category"/>
    <bean id="ShoppingCart" class="WebApp.Entity.ShoppingCart.ShoppingCart" scope="session">
        <aop:scoped-proxy/>
    </bean>
    
    <!-- Dao -->
    
    <bean id="UserDao" class="WebApp.Dao.UserDao">
        <property name="factory" ref="sessionFactory"/>
    </bean>
    <bean id="BookDao" class="WebApp.Dao.BookDao">
        <property name="factory" ref="sessionFactory"/>
    </bean>
    <bean id="ManagerDao" class="WebApp.Dao.ManagerDao">
        <property name="factory" ref="sessionFactory"/>
    </bean>
    
    <!-- Service -->
    
    <bean id="UserService" class="WebApp.Service.UserService">
        <property name="dao" ref="UserDao"/>
    </bean>
    <bean id="BookService" class="WebApp.Service.BookService">
        <property name="dao" ref="BookDao"/>
    </bean>
    <bean id="ManagerService" class="WebApp.Service.ManagerService">
        <property name="dao" ref="ManagerDao"/>
    </bean>
    
    <!-- Action -->
    
    <bean id="UserAction" class="WebApp.Action.UserAction">
        <property name="user" ref="User"/>
        <property name="service" ref="UserService"/>
    </bean>
    <bean id="BookAction" class="WebApp.Action.BookAction">
        <property name="bookservice" ref="BookService"/>
        <property name="book" ref="Book"/>
        <property name="userservice" ref="UserService"/>
        <property name="category" ref="Category"/>
        <property name="shoppingcart" ref="ShoppingCart"/>
        <property name="destination" ref="queueDestination"/>
        <property name="jmssend" ref="jmsSend"/>
        <aop:scoped-proxy/>
    </bean>
    <bean id="ManagerAction" class="WebApp.Action.ManagerAction">
        <property name="userservice" ref="UserService"/>
        <property name="manager" ref="Manager"/>
        <property name="managerservice" ref="ManagerService"/>
    </bean>
    
    <!-- JAAS LoginModule -->
    <bean id="JaasLoginModule" class="Component.LoginSecurity.JaasLoginModule">
        <property name="dao" ref="ManagerDao"/>
    </bean>
    
    <!-- JMS(Java Message Service) Beans-->
        <!-- ActiveMQ the real factory -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>
        <!-- Spring the proxy factory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
        <property name="sessionCacheSize" value="30"/>
    </bean>
        <!-- Destination -->
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>queue</value>
        </constructor-arg>
    </bean>
        <!-- jmsTemplate the realized bean -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="queueDestination"/>
    </bean>
        <!-- jmsSend Class -->
    <bean id="jmsSend" class="Component.JMS.jmsSend">
        <property name="jmsTemplate" ref="jmsTemplate"/>
    </bean>
        <!-- jmsReceiveListener Class -->
    <bean id="jmsReceiveListener" class="Component.JMS.jmsReceiveListener">
        <property name="service" ref="BookService"/>
    </bean>
        <!-- JmsContainer of Listener -->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="queueDestination"/>
        <property name="messageListener" ref="jmsReceiveListener"/>
    </bean>
    
    <!-- Web Service -->
    <bean id="IWebService" class="WebApp.WebService.webservice">
        <property name="service" ref="BookService"/>
    </bean>
    <jaxws:endpoint id="webserver_port" implementor="WebApp.WebService.webservice"
    address="/Test.ws">
    </jaxws:endpoint>
    
    <!-- Restful Web Service -->
    <bean id="IRestWebService" class="WebApp.RestWebService.RestWebService">
        <property name="service" ref="BookService"/>
    </bean>
    <jaxrs:server address="/Restful">
        <jaxrs:serviceBeans>
            <ref bean="IRestWebService"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>
</beans>
